{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\OneDrive\\\\Documentos\\\\William\\\\Digital House\\\\FRONT\\\\FRONTENDIII\\\\finalFrontIII\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SWITCH_DARK':\n      return themes.dark;\n\n    case 'SWITCH_LIGHT':\n      return themes.light;\n\n    default:\n      throw new Error();\n  }\n};\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [dentists, setDentists] = useState([]);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setDentists(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentists,\n      setDentists\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"7ybyrpxdOUNw8S6dnM4VKwVYk5A=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useReducer","initialState","theme","data","ContextGlobal","themeReducer","state","action","type","themes","dark","light","Error","ContextProvider","children","dentists","setDentists","url","fetch","then","response","json","useContextGlobal"],"sources":["C:/Users/willi/OneDrive/Documentos/William/Digital House/FRONT/FRONTENDIII/finalFrontIII/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useReducer } from \"react\";\n\nexport const initialState = {theme: \"\", data: []}\n\nexport const ContextGlobal = createContext();\n\nconst themeReducer = (state, action) => {\n  switch(action.type){\n      case 'SWITCH_DARK':\n          return themes.dark\n      case 'SWITCH_LIGHT':\n          return themes.light\n      default:\n          throw new Error\n  }\n}\n\nconst ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [dentists, setDentists] = useState([])\n  const url = 'https://jsonplaceholder.typicode.com/users'\n\n  useEffect(() =>{\n    fetch(url)\n    .then(response => response.json())\n    .then(data => setDentists(data))\n  }, [])\n  \n\n  return (\n    <ContextGlobal.Provider value={{dentists, setDentists}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n\nexport default ContextProvider;\n\nexport const useContextGlobal = () => useContext(ContextGlobal)\n\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyDC,UAAzD,QAA2E,OAA3E;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;;AAEP,MAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,aAAL;MACI,OAAOC,MAAM,CAACC,IAAd;;IACJ,KAAK,cAAL;MACI,OAAOD,MAAM,CAACE,KAAd;;IACJ;MACI,MAAM,IAAIC,KAAJ,EAAN;EANR;AAQD,CATD;;AAWA,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACxC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMmB,GAAG,GAAG,4CAAZ;EAEAlB,SAAS,CAAC,MAAK;IACbmB,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMhB,IAAI,IAAIa,WAAW,CAACb,IAAD,CAFzB;EAGD,CAJQ,EAIN,EAJM,CAAT;EAOA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACY,QAAD;MAAWC;IAAX,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAjBD;;GAAMD,e;;KAAAA,e;AAmBN,eAAeA,eAAf;AAEA,OAAO,MAAMS,gBAAgB,GAAG;EAAA;;EAAA,OAAMzB,UAAU,CAACO,aAAD,CAAhB;AAAA,CAAzB;;IAAMkB,gB"},"metadata":{},"sourceType":"module"}