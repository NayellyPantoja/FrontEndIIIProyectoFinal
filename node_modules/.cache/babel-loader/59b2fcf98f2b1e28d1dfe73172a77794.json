{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\OneDrive\\\\Documentos\\\\William\\\\Digital House\\\\FRONT\\\\FRONTENDIII\\\\finalFrontIII\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [dentist, setDentist] = useState([]);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => setDentist(data));\n    console.log();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentist,\n      setDentist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"tDpE/idQfzsQKlmCaMXAhjqYar4=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useReducer","initialState","theme","data","ContextGlobal","ContextProvider","children","dentist","setDentist","url","fetch","then","response","json","console","log","useContextGlobal"],"sources":["C:/Users/willi/OneDrive/Documentos/William/Digital House/FRONT/FRONTENDIII/finalFrontIII/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useReducer } from \"react\";\n\nexport const initialState = {theme: \"\", data: []}\n\nexport const ContextGlobal = createContext();\n\nconst ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [dentist, setDentist] = useState([])\n  const url = 'https://jsonplaceholder.typicode.com/users'\n\n  useEffect(() =>{\n    fetch(url)\n    .then(response => response.json())\n    .then(data => setDentist(data) )\n    console.log()\n  }, [])\n\n  return (\n    <ContextGlobal.Provider value={{dentist, setDentist}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n\nexport default ContextProvider;\n\nexport const useContextGlobal = () => useContext(ContextGlobal)\n\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyDC,UAAzD,QAA2E,OAA3E;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;;AAEP,MAAMS,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACxC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMW,GAAG,GAAG,4CAAZ;EAEAV,SAAS,CAAC,MAAK;IACbW,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMR,IAAI,IAAIK,UAAU,CAACL,IAAD,CAFxB;IAGAW,OAAO,CAACC,GAAR;EACD,CALQ,EAKN,EALM,CAAT;EAOA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACR,OAAD;MAAUC;IAAV,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAjBD;;GAAMD,e;;KAAAA,e;AAmBN,eAAeA,eAAf;AAEA,OAAO,MAAMW,gBAAgB,GAAG;EAAA;;EAAA,OAAMnB,UAAU,CAACO,aAAD,CAAhB;AAAA,CAAzB;;IAAMY,gB"},"metadata":{},"sourceType":"module"}